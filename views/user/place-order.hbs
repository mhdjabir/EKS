<div class="container1">

  <div class="shipping-info">
    <h2>Shipping Information</h2>
    <form id="addressForm" action="/save-address" method="POST">
      <div class="form-group">
        <label for="name">Full Name:</label>
        <input type="text" id="name" name="name" placeholder="Enter your full name" required>
      </div>
      <div class="form-group">
        <label for="address">Address:</label>
        <input type="text" id="address" name="address" placeholder="Enter your address" required>
      </div>
      <div class="form-group">
        <label for="city">City:</label>
        <input type="text" id="city" name="city" placeholder="Enter your city" required>
      </div> 
      <div class="form-group"> 
        <label for="state">State:</label>
        <input type="text" id="state" name="state" placeholder="Enter your state" required>
      </div>
      <div class="form-group">
        <label for="zip">Pin Code:</label>
        <input type="text" id="zip" name="zip" placeholder="Enter your Pin code" required>
      </div> 
      <div class="form-group">
        <label for="phone">Phone Number:</label>
        <input type="text" id="phone" name="phone" placeholder="Enter your phone number" required>
      </div>
      <button type="submit" id="saveButton" class="btn">Save</button>
    </form>
  </div> 

  <div class="order-summary">
    <table class="order-table">
      <thead>
        <tr>
          <h3>Total amount: ₹{{total}}</h3>
        </tr>
      </thead>
    </table>

    <div class="payment-method">
      <div class="form-group">
        <label for="payment-method">Select Payment Method:</label>
        <select id="payment-method" name="paymentMethod" required>
          <option value="cash-on-delivery">Cash on Delivery</option>
          <option value="online-payment">Online Payment</option>
        </select>
      </div>
    </div>

    <div class="checkout-button">
      <button id="checkoutButton" type="button" class="btn" style="display: none;">Checkout</button>
      <form id="proceedToPayForm" action="/create-order" method="POST" style="display: none;">
        <input type="hidden" name="amount" value="{{total}}">
        <input type="hidden" name="paymentMethod" value="Online Payment">
        <button type="submit" class="btn btn-success">Proceed to Pay ₹{{total}}</button>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const addressForm = document.getElementById('addressForm');
    const saveButton = document.getElementById('saveButton');
    const paymentMethodSelect = document.getElementById('payment-method');
    const checkoutButton = document.getElementById('checkoutButton');
    const proceedToPayForm = document.getElementById('proceedToPayForm');

    // Fetch the saved address
    fetch('/get-address')
      .then(response => response.json())
      .then(data => {
        if (data.success && data.address) {
          // Pre-fill the form fields
          const address = data.address;
          document.getElementById('name').value = address.name || '';
          document.getElementById('address').value = address.address || '';
          document.getElementById('city').value = address.city || '';
          document.getElementById('state').value = address.state || '';
          document.getElementById('zip').value = address.zip || '';
          document.getElementById('phone').value = address.phone || '';

          // Hide the save button initially
          saveButton.style.display = 'none';
        }
      })
      .catch(err => console.error('Error fetching address:', err));

    // Show the save button only when the form is modified
    addressForm.addEventListener('input', () => {
      saveButton.style.display = 'block';
    });

    // Handle form submission via AJAX
    addressForm.addEventListener('submit', (e) => {
      e.preventDefault();

      const formData = new FormData(e.target);
      const addressData = Object.fromEntries(formData.entries());

      // Validate phone number length
      if (addressData.phone.length < 10) {
        alert('Phone number must be at least 10 digits.');
        return;
      }

      fetch('/save-address', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(addressData)
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert('Address saved successfully!');
            saveButton.style.display = 'none'; // Hide the save button after saving
          } else {
            alert('Failed to save address.');
          }
        })
        .catch(err => console.error('Error saving address:', err));
    });

    // Function to toggle buttons based on payment method
    const toggleButtons = () => {
      const selectedMethod = paymentMethodSelect.value;
      if (selectedMethod === 'cash-on-delivery') {
        checkoutButton.style.display = 'block';
        proceedToPayForm.style.display = 'none';
      } else if (selectedMethod === 'online-payment') {
        checkoutButton.style.display = 'none';
        proceedToPayForm.style.display = 'block';
      }
    };

    // Initial toggle on page load
    toggleButtons();

    // Add event listener to payment method dropdown
    paymentMethodSelect.addEventListener('change', toggleButtons);

    // Handle checkout button click
    checkoutButton.addEventListener('click', (e) => {
      e.preventDefault();

      const paymentMethod = paymentMethodSelect.value;

      if (paymentMethod === 'cash-on-delivery') {
        fetch('/place-order', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ paymentMethod })
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              window.location.href = '/order-success';
            } else {
              alert('Failed to place order. Please try again.');
            }
          })
          .catch(err => console.error('Error placing order:', err));
      }
    });
  });
</script>

<style>
  body {
    font-family: 'Arial', sans-serif;
    background-color: #f4f4f9;
    margin: 0;
    padding: 0;
  }

  .container1 {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
  }

  .page-title {
    text-align: center;
    margin-bottom: 30px;
    font-size: 2.5em;
    color: #333;
  }

  .order-summary,
  .shipping-info {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 20px;
    margin-bottom: 20px;
  }

  .order-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 10px;
  }

  .order-table th,
  .order-table td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }

  .order-table th {
    background-color: #f8f8f8;
    font-weight: bold;
  }

  .form-group {
    margin-bottom: 15px;
  }

  .form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
  }

  .form-group input,
  .form-group select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 1em;
  }

  #saveButton.edit {
    background-color: #007bff; /* Blue color */
    color: #fff;
  }

  #saveButton.edit:hover {
    background-color: #0056b3; /* Darker blue on hover */
  }

  .btn {
    display: inline-block;
    background-color: #218838 ;
    color: #fff;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    font-size: 1em;
    cursor: pointer;
    text-align: center;
  }

  .btn:hover {
    background-color: #28a745;
    color: rgb(255, 255, 255);
  }

  .payment-method {
    margin-top: 20px;
  }

  .checkout-button {
    margin-top: 20px;
    text-align: right;
  }
</style>